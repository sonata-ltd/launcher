// Generated by ts-to-zod
import { z } from "zod";
import { operationStageSchema } from "./OperationStage";
import { processStatusSchema } from "./ProcessStatus";
import { processTargetSchema } from "./ProcessTarget";
import { stageResultSchema } from "./StageResult";


export const operationUpdateSchema = z.union([
  z.object({
    type: z.literal("SingleDeterminable"),
    details: z.object({
      stage: operationStageSchema,
      status: processStatusSchema,
      target: processTargetSchema.nullish(),
    }),
  }),
  z.object({
    type: z.literal("Determinable"),
    details: z.object({
      stage: operationStageSchema,
      status: processStatusSchema,
      target: processTargetSchema.nullish(),
      current: z.number(),
      total: z.number(),
    }),
  }),
  z.object({
    type: z.literal("Indeterminable"),
    details: z.object({
      stage: operationStageSchema,
      status: processStatusSchema,
    }),
  }),
  z.object({
    type: z.literal("Completed"),
    details: stageResultSchema,
  }),
]);
